[1/10] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/timer.c.obj
[2/10] Performing build step for 'bootloader'
[1/1] cd /home/jacobe/SparkTest/build/bootloader/esp-idf/esptool_py && /home/jacobe/.espressif/python_env/idf5.1_py3.10_env/bin/python /home/jacobe/esp/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x1000 /home/jacobe/SparkTest/build/bootloader/bootloader.bin
Bootloader binary size 0x66c0 bytes. 0x940 bytes (8%) free.
[3/8] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/main.c.obj
[4/8] Linking C static library esp-idf/main/libmain.a
[5/8] Generating ld/sections.ld
[6/8] Linking CXX executable main.elf
[7/8] Generating binary image from built executable
esptool.py v4.3
Creating esp32 image...
Merged 2 ELF sections
Successfully created esp32 image.
Generated /home/jacobe/SparkTest/build/main.bin
[8/8] cd /home/jacobe/SparkTest/build/esp-idf/esptool_py && /home/jacobe/.espressif/python_env/idf5.1_py3.10_env/bin/python /home/jacobe/esp/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 partition --type app /home/jacobe/SparkTest/build/partition_table/partition-table.bin /home/jacobe/SparkTest/build/main.bin
main.bin binary size 0x2f420 bytes. Smallest app partition is 0x100000 bytes. 0xd0be0 bytes (82%) free.
